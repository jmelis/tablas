{"version":3,"sources":["components/home.js","components/progress.js","components/results.js","components/game.js","App.js","reportWebVitals.js","index.js"],"names":["Home","handleGameStart","inputs","levels","map","l","type","value","onClick","Progress","data","totalTime","length","numItems","minutes","Math","floor","seconds","className","toFixed","appendToLocalStorageKey","key","storedData","localStorage","getItem","JSON","parse","getStorageKey","setItem","stringify","concat","Results","setPage","levelName","gameTimestamp","questionTimes","i","tsPrevious","label","tQuestion","push","sort","a","b","useEffect","qt","e","preventDefault","Game","useState","Date","now","setData","qIndex","setqIndex","qLabel","setqLabel","level","find","questions","array","j","random","temp","shuffleArray","gameOnGoing","App","setLevelName","page","router","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3229f820.chunk.js","sourcesContent":["function Home({ handleGameStart, levels}) {\n    const inputs = levels.map(l => <input key={l['name']} type='button' value={l['name']} onClick={handleGameStart} />);\n    return (<div>{inputs}</div>);\n}\nexport default Home;\n","\n\nfunction Progress({ data }) {\n    const totalTime = (data[data.length - 1] - data[0]) / 1e3;\n    const numItems = (data.length - 1) / 2;\n\n    const minutes = Math.floor(totalTime / 60);\n    const seconds = Math.floor(totalTime - minutes * 60);\n\n    return (<div className=\"progress\">\n        <div>total time: {minutes}m{seconds}s</div>\n        <div>average time: {(totalTime/numItems).toFixed(2)}</div>\n    </div>)\n}\n\nexport default Progress;\n","import { useEffect } from \"react\";\n\nfunction getStorageKey(key) {\n    let data = localStorage.getItem(key);\n    if (!data) {\n        data = [];\n    } else {\n        data = JSON.parse(data);\n    }\n    return data;\n}\n\nfunction appendToLocalStorageKey(key, data) {\n    const storedData = getStorageKey(key);\n    localStorage.setItem(key, JSON.stringify(storedData.concat(data)));\n}\n\nfunction Results({ data, setPage, levelName }) {\n    function handleHome(e) {\n        e.preventDefault();\n        setPage('home');\n    }\n\n    const gameTimestamp = data[0] / 1e3;\n    const totalTime = (data[data.length - 1] - data[0]) / 1e3;\n    const numItems = (data.length - 1) / 2;\n\n    const minutes = Math.floor(totalTime / 60);\n    const seconds = Math.floor(totalTime - minutes * 60);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    let questionTimes = [];\n    for (let i = 0; i < numItems; i++) {\n        const tsPrevious = data[2*i];\n        const label = data[2*i + 1];\n        const tsQuestion = data[2*i + 2];\n        const tQuestion = (tsQuestion - tsPrevious) / 1e3;\n        questionTimes.push([i+1, label, tQuestion]);\n    }\n\n    questionTimes.sort((a, b) => b[2] - a[2]);\n\n    useEffect(() => {\n        appendToLocalStorageKey('questions', questionTimes.map(qt => [gameTimestamp, levelName, qt[1], qt[2]]));\n        appendToLocalStorageKey('games', [[gameTimestamp, levelName, numItems, totalTime]]);\n    }, [gameTimestamp, levelName, numItems, questionTimes, totalTime]);\n\n    return (<div className=\"results\">\n        <div>levelName: {levelName}</div>\n        <div>timestamp: {gameTimestamp}</div>\n        <div>total time: {minutes}m{seconds}s</div>\n        <div>numItems: {numItems}</div>\n        <div><ul>{questionTimes.map(e => <li key={e[0]}><pre>({e[0]}) {e[1]} time {e[2]}s</pre></li>)}</ul></div>\n        <div><input type='button' value='home' onClick={handleHome} /></div>\n    </div>)\n}\n\nexport default Results;\n","import React, { useState, useEffect } from 'react';\nimport Progress from './progress.js';\nimport Results from './results.js';\n\n// https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n/* Randomize array in-place using Durstenfeld shuffle algorithm */\nfunction shuffleArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n}\n\nfunction Game({ setPage, levelName, levels }) {\n    const [data, setData] = useState([Date.now()]);\n    const [qIndex, setqIndex] = useState(0);\n    const [qLabel, setqLabel] = useState();\n\n    const level = levels.find(l => l['name'] === levelName);\n    let questions = level['questions'];\n\n    useEffect(() => {\n        if (level['shuffle']) {\n            shuffleArray(questions);\n        };\n        setqLabel(questions[0]);\n    }, [level, questions]);\n\n    const gameOnGoing = qIndex + 1 <= questions.length;\n\n    function handleNext(e) {\n      e.preventDefault();\n      setData(data.concat([questions[qIndex], Date.now()]));\n      setqLabel(questions[qIndex + 1]);\n      setqIndex(qIndex + 1);\n    }\n\n    return (\n      <div>\n        {gameOnGoing && <div className=\"Game\">\n          <div>count: {qIndex + 1} / {questions.length}</div>\n          <div>{qLabel}</div>\n          <input type='button' value='next' onClick={handleNext}/>\n          <Progress data={data}/>\n        </div>}\n\n        {!gameOnGoing && <Results setPage={setPage} data={data} levelName={levelName} />}\n      </div>\n    )\n}\n\nexport default Game;\n","import React, { useState } from 'react';\n\nimport Home from './components/home.js';\nimport Game from './components/game.js';\nimport levels from './assets/levels.json';\n\nimport './App.css';\n\nfunction App() {\n  const [levelName, setLevelName] = useState();\n  const [page, setPage] = useState('home');\n\n  function handleGameStart(e) {\n    setLevelName(e.target.value);\n    setPage('game');\n  };\n\n  const router = {\n    'home': <Home handleGameStart={handleGameStart} levels={levels} />,\n    'game': <Game levelName={levelName} levels={levels} setPage={setPage}/>,\n  };\n\n  return (\n    <div className=\"App\">\n      {router[page]}\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}